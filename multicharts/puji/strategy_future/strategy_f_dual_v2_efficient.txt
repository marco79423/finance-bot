// TXF 13min
// Use 50 bar
// Focus on balancing profits and losses.

inputs: Enabled(1), OrderSize(1);

if Enabled = 0 then
	#Return;

vars: MaxOpenPositionProfit(0);
if MarketPosition <> 0 then begin
	if MaxOpenPositionProfit < OpenPositionProfit then
		MaxOpenPositionProfit = OpenPositionProfit;
end else begin
	MaxOpenPositionProfit = 0;
end;

vars: Len(50);
vars: PointSum(0), count(0);
count = Len - 1;
PointSum = Summation(Absvalue(Close - Close[1]), count) ;

vars: Efficient(0), Difference(0);
if PointSum <> 0 then begin
	Difference = Close - Close[count] ;
	Efficient = Difference / PointSum;
end else begin
	Efficient = 0;
end;

vars: EnvCond(True);
EnvCond = not (IsSettlementDay and 1200 < Time and Time < 1400);
EnvCond = EnvCond and not (0845 <= Time and Time <= 0847);

vars: BuyCond(True);
BuyCond = True;
BuyCond = BuyCond and EnvCond;
BuyCond = BuyCond and crosses_above(Efficient, 0.33);
if BuyCond then begin
	Buy ("LE") OrderSize contracts next bar market;
end;

vars: ShortCond(True);
ShortCond = True;
ShortCond = ShortCond and EnvCond;
ShortCond = ShortCond and crosses_below(Efficient, -0.33);
if ShortCond then begin
	SellShort ( "SE" ) OrderSize contracts next bar market;
end;

vars: STD(0), StdN(25);
STD = StdDev(Close, Len) * (StdN * 0.1);

vars: MaxEfficient(0);
if MarketPosition <> 0 then begin
	if Efficient > MaxEfficient then
		MaxEfficient = Efficient;
end else begin
	MaxEfficient = -999;
end;

vars: MinEfficient(0);
if MarketPosition <> 0 then begin
	if Efficient < MinEfficient then
		MinEfficient = Efficient;
end else begin
	MinEfficient = 999;
end;

if MarketPosition = 1 then begin
	if IsSettlementDay and 1200 < Time and Time < 1400 then begin
		Sell ("LX_Settle") all contracts next bar market;
	end;

	vars: SellCond(True);
	SellCond = True;
	SellCond = SellCond and AbsValue(Close - Close[1]) > STD;
	SellCond = SellCond and AbsValue(Close - Open) > STD;
	SellCond = SellCond and Close < Low[1];
	if SellCond then begin
		Sell ("LX_Std") all contracts next bar market;
	end;

	vars: SellCond2(True);
	SellCond2 = True;
	SellCond2 = SellCond2 and MaxEfficient > 0.5;
	SellCond2 = SellCond2 and MaxOpenPositionProfit > 100 * BigPointValue * OrderSize;
	SellCond2 = SellCond2 and Close < EntryPrice + 5;
	if SellCond2 then begin
		Sell ("LX_Win") all contracts next bar market;
	end;

	vars: SellCond3(True);
	SellCond3 = True;
	SellCond3 = SellCond3 and HighestBar(High, Len) > Len * 0.5;
	if SellCond3 then begin
		Sell ("LX_NoH") all contracts next bar market;
	end;

	if OpenPositionProfit < -95 * BigPointValue * OrderSize then begin
		Sell("LX_StopLoss") all contracts next bar market;
	end;
end;

if MarketPosition = -1 then begin
	if IsSettlementDay and 1200 < Time and Time < 1400 then begin
		BuyToCover ("SX_Settle") all contracts next bar market;
	end;

	vars: CoverCond(True);
	CoverCond = True;
	CoverCond = CoverCond and (AbsValue(Close - Close[1]) > STD or AbsValue(Close - Open) > STD);
	CoverCond = CoverCond and Close > High[1];
	if CoverCond then begin
		BuyToCover ("SX_Std") all contracts next bar market;
	end;

	vars: CoverCond2(True);
	CoverCond2 = True;
	CoverCond2 = CoverCond2 and MinEfficient < -0.5;
	CoverCond2 = CoverCond2 and MaxOpenPositionProfit > 170 * BigPointValue * OrderSize;
	CoverCond2 = CoverCond2 and Close < EntryPrice - 5;
	if CoverCond2 then begin
		BuyToCover ("SX_Win") all contracts next bar market;
	end;

	vars: CoverCond3(True);
	CoverCond3 = True;
	CoverCond3 = CoverCond3 and LowestBar(High, Len) > Len * 0.5;
	if CoverCond3 then begin
		BuyToCover ("SX_NoL") all contracts next bar market;
	end;

	if OpenPositionProfit < -50 * BigPointValue * OrderSize then begin
		BuyToCover ("SX_StopLoss") all contracts next bar market;
	end;
end;
